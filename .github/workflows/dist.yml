on:
  workflow_call:
    # inputs:
    #   name:
    #     required: true
    #     type: string

jobs:
  build:
    permissions:
      contents: write
      repository-projects: write
    name: build
    strategy:
      matrix:
        platform:
          - macos-latest # arm
          - macos-13 # x86
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}

    steps:
      - if: runner.os == 'linux'
        uses: mlugg/setup-zig@v2
      - if: runner.os == 'macOS'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: actions/checkout@v4
        with:
          set-safe-directory: false
          lfs: true
      # - name: Install Protoc
      #   if: runner.os != 'macOS'
      #   uses: arduino/setup-protoc@v3
      #   with:
      #     repo-token: ${{ github.token }}
      - name: init
        shell: bash
        env:
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          ./sh/confUnpack.sh
          echo "RUST_VER=$(uname | grep -q 'Darwin' && date -v-28d +"%Y-%m-26" || date -d "28 days ago" +"%Y-%m-26")" >> $GITHUB_ENV

      - name: rust-toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
            toolchain: nightly-${{ env.RUST_VER }}
            components: rust-src

      - name: dist
        shell: bash
        run: |
          sh/dist/dist.sh

  ver:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: actions/checkout@v4
        with:
          set-safe-directory: false
          lfs: true
      - name: vertxt
        shell: bash
        env:
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          ./sh/confUnpack.sh
          ./sh/dist/ver.sh
